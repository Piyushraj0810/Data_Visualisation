<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AllowCalculationsForDensifiedMarks />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <ExtendTimeSeries />
    <Heatmap />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='animation'>
      <format attr='animation-duration' value='0.5' />
      <format attr='animation-style' value='as-synced' />
    </style-rule>
  </style>
  <datasources>
    <datasource caption='covid_19_india (1)' inline='true' name='federated.0dlmfty0322y09169ai7m17olsfk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_19_india (1)' name='textscan.03mqb6p1qtoboc1c7wtqd0zzri5k'>
            <connection class='textscan' directory='C:/Users/piyush/Downloads' filename='covid_19_india (1).csv' password='' server='' />
          </named-connection>
          <named-connection caption='StatewiseTestingDetails' name='textscan.1dcnonu1b01n2818z69hp0knj70b'>
            <connection class='textscan' directory='C:/Users/piyush/Downloads' filename='StatewiseTestingDetails.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.03mqb6p1qtoboc1c7wtqd0zzri5k' name='covid_19_india (1).csv' table='[covid_19_india (1)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='Sno' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='string' name='Time' ordinal='2' />
            <column datatype='string' name='State/UnionTerritory' ordinal='3' />
            <column datatype='string' name='ConfirmedIndianNational' ordinal='4' />
            <column datatype='string' name='ConfirmedForeignNational' ordinal='5' />
            <column datatype='integer' name='Cured' ordinal='6' />
            <column datatype='integer' name='Deaths' ordinal='7' />
            <column datatype='integer' name='Confirmed' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_19_india (1).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sno</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sno]</local-name>
            <parent-name>[covid_19_india (1).csv]</parent-name>
            <remote-alias>Sno</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_19_india (1).csv_4B5600CB7F774815A5563A523073F978]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[covid_19_india (1).csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_19_india (1).csv_4B5600CB7F774815A5563A523073F978]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[covid_19_india (1).csv]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid_19_india (1).csv_4B5600CB7F774815A5563A523073F978]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/UnionTerritory</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State/UnionTerritory]</local-name>
            <parent-name>[covid_19_india (1).csv]</parent-name>
            <remote-alias>State/UnionTerritory</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid_19_india (1).csv_4B5600CB7F774815A5563A523073F978]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedIndianNational</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ConfirmedIndianNational]</local-name>
            <parent-name>[covid_19_india (1).csv]</parent-name>
            <remote-alias>ConfirmedIndianNational</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid_19_india (1).csv_4B5600CB7F774815A5563A523073F978]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedForeignNational</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ConfirmedForeignNational]</local-name>
            <parent-name>[covid_19_india (1).csv]</parent-name>
            <remote-alias>ConfirmedForeignNational</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid_19_india (1).csv_4B5600CB7F774815A5563A523073F978]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cured</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cured]</local-name>
            <parent-name>[covid_19_india (1).csv]</parent-name>
            <remote-alias>Cured</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_19_india (1).csv_4B5600CB7F774815A5563A523073F978]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[covid_19_india (1).csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_19_india (1).csv_4B5600CB7F774815A5563A523073F978]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[covid_19_india (1).csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_19_india (1).csv_4B5600CB7F774815A5563A523073F978]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0dlmfty0322y09169ai7m17olsfk].[sum:Confirmed:qk]&quot;' value='Death' />
        </aliases>
      </column>
      <column caption='Confirmed Foreign National' datatype='string' name='[ConfirmedForeignNational]' role='dimension' type='nominal' />
      <column caption='Confirmed Indian National' datatype='string' name='[ConfirmedIndianNational]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='covid_19_india (1).csv' datatype='table' name='[__tableau_internal_object_id__].[covid_19_india (1).csv_4B5600CB7F774815A5563A523073F978]' role='measure' type='quantitative' />
      <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cured]' derivation='Sum' name='[sum:Cured:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dlmfty0322y09169ai7m17olsfk].[sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dlmfty0322y09169ai7m17olsfk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0dlmfty0322y09169ai7m17olsfk].[sum:Calculation_1363464800348725255:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0dlmfty0322y09169ai7m17olsfk].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dlmfty0322y09169ai7m17olsfk].[sum:Cured:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='covid_19_india (1).csv' id='covid_19_india (1).csv_4B5600CB7F774815A5563A523073F978'>
            <properties context=''>
              <relation connection='textscan.03mqb6p1qtoboc1c7wtqd0zzri5k' name='covid_19_india (1).csv' table='[covid_19_india (1)#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='Sno' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='string' name='Time' ordinal='2' />
                  <column datatype='string' name='State/UnionTerritory' ordinal='3' />
                  <column datatype='string' name='ConfirmedIndianNational' ordinal='4' />
                  <column datatype='string' name='ConfirmedForeignNational' ordinal='5' />
                  <column datatype='integer' name='Cured' ordinal='6' />
                  <column datatype='integer' name='Deaths' ordinal='7' />
                  <column datatype='integer' name='Confirmed' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='covid_vaccine_statewise' inline='true' name='federated.14czmos17m2oi21g7kw7k0v3bfx5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_vaccine_statewise' name='textscan.0ei3vgf0kkmacl16ht8vc12puasy'>
            <connection class='textscan' directory='C:/Users/piyush/Downloads/covid_vaccine_statewise.csv' filename='covid_vaccine_statewise.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0ei3vgf0kkmacl16ht8vc12puasy' name='covid_vaccine_statewise.csv' table='[covid_vaccine_statewise#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='Updated On' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='real' name='Total Doses Administered' ordinal='2' />
            <column datatype='real' name='Sessions' ordinal='3' />
            <column datatype='real' name='Sites ' ordinal='4' />
            <column datatype='real' name='First Dose Administered' ordinal='5' />
            <column datatype='real' name='Second Dose Administered' ordinal='6' />
            <column datatype='real' name='Male (Doses Administered)' ordinal='7' />
            <column datatype='real' name='Female (Doses Administered)' ordinal='8' />
            <column datatype='real' name='Transgender (Doses Administered)' ordinal='9' />
            <column datatype='real' name='Covaxin (Doses Administered)' ordinal='10' />
            <column datatype='real' name='CoviShield (Doses Administered)' ordinal='11' />
            <column datatype='real' name='Sputnik V (Doses Administered)' ordinal='12' />
            <column datatype='real' name='AEFI' ordinal='13' />
            <column datatype='real' name='18-44 Years (Doses Administered)' ordinal='14' />
            <column datatype='real' name='45-60 Years (Doses Administered)' ordinal='15' />
            <column datatype='real' name='60+ Years (Doses Administered)' ordinal='16' />
            <column datatype='real' name='18-44 Years(Individuals Vaccinated)' ordinal='17' />
            <column datatype='real' name='45-60 Years(Individuals Vaccinated)' ordinal='18' />
            <column datatype='real' name='60+ Years(Individuals Vaccinated)' ordinal='19' />
            <column datatype='real' name='Male(Individuals Vaccinated)' ordinal='20' />
            <column datatype='real' name='Female(Individuals Vaccinated)' ordinal='21' />
            <column datatype='real' name='Transgender(Individuals Vaccinated)' ordinal='22' />
            <column datatype='real' name='Total Individuals Vaccinated' ordinal='23' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Updated On</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Updated On]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Updated On</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_vaccine_statewise.csv_133EAAD113D2481BBCDEEC2511F95C7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid_vaccine_statewise.csv_133EAAD113D2481BBCDEEC2511F95C7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Doses Administered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Doses Administered]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Total Doses Administered</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_vaccine_statewise.csv_133EAAD113D2481BBCDEEC2511F95C7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sessions</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sessions]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Sessions</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_vaccine_statewise.csv_133EAAD113D2481BBCDEEC2511F95C7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sites </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sites ]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Sites </remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_vaccine_statewise.csv_133EAAD113D2481BBCDEEC2511F95C7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>First Dose Administered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[First Dose Administered]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>First Dose Administered</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_vaccine_statewise.csv_133EAAD113D2481BBCDEEC2511F95C7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Second Dose Administered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Second Dose Administered]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Second Dose Administered</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_vaccine_statewise.csv_133EAAD113D2481BBCDEEC2511F95C7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Male (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Male (Doses Administered)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Male (Doses Administered)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_vaccine_statewise.csv_133EAAD113D2481BBCDEEC2511F95C7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Female (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Female (Doses Administered)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Female (Doses Administered)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_vaccine_statewise.csv_133EAAD113D2481BBCDEEC2511F95C7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transgender (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Transgender (Doses Administered)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Transgender (Doses Administered)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_vaccine_statewise.csv_133EAAD113D2481BBCDEEC2511F95C7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Covaxin (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Covaxin (Doses Administered)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Covaxin (Doses Administered)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_vaccine_statewise.csv_133EAAD113D2481BBCDEEC2511F95C7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CoviShield (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CoviShield (Doses Administered)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>CoviShield (Doses Administered)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_vaccine_statewise.csv_133EAAD113D2481BBCDEEC2511F95C7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sputnik V (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sputnik V (Doses Administered)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Sputnik V (Doses Administered)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_vaccine_statewise.csv_133EAAD113D2481BBCDEEC2511F95C7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AEFI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AEFI]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>AEFI</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_vaccine_statewise.csv_133EAAD113D2481BBCDEEC2511F95C7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>18-44 Years (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[18-44 Years (Doses Administered)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>18-44 Years (Doses Administered)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_vaccine_statewise.csv_133EAAD113D2481BBCDEEC2511F95C7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>45-60 Years (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[45-60 Years (Doses Administered)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>45-60 Years (Doses Administered)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_vaccine_statewise.csv_133EAAD113D2481BBCDEEC2511F95C7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>60+ Years (Doses Administered)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[60+ Years (Doses Administered)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>60+ Years (Doses Administered)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_vaccine_statewise.csv_133EAAD113D2481BBCDEEC2511F95C7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>18-44 Years(Individuals Vaccinated)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[18-44 Years(Individuals Vaccinated)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>18-44 Years(Individuals Vaccinated)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_vaccine_statewise.csv_133EAAD113D2481BBCDEEC2511F95C7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>45-60 Years(Individuals Vaccinated)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[45-60 Years(Individuals Vaccinated)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>45-60 Years(Individuals Vaccinated)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_vaccine_statewise.csv_133EAAD113D2481BBCDEEC2511F95C7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>60+ Years(Individuals Vaccinated)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[60+ Years(Individuals Vaccinated)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>60+ Years(Individuals Vaccinated)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_vaccine_statewise.csv_133EAAD113D2481BBCDEEC2511F95C7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Male(Individuals Vaccinated)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Male(Individuals Vaccinated)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Male(Individuals Vaccinated)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_vaccine_statewise.csv_133EAAD113D2481BBCDEEC2511F95C7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Female(Individuals Vaccinated)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Female(Individuals Vaccinated)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Female(Individuals Vaccinated)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_vaccine_statewise.csv_133EAAD113D2481BBCDEEC2511F95C7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transgender(Individuals Vaccinated)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Transgender(Individuals Vaccinated)]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Transgender(Individuals Vaccinated)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_vaccine_statewise.csv_133EAAD113D2481BBCDEEC2511F95C7E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Individuals Vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Individuals Vaccinated]</local-name>
            <parent-name>[covid_vaccine_statewise.csv]</parent-name>
            <remote-alias>Total Individuals Vaccinated</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid_vaccine_statewise.csv_133EAAD113D2481BBCDEEC2511F95C7E]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.14czmos17m2oi21g7kw7k0v3bfx5].[sum:Covaxin (Doses Administered):qk]&quot;' value='Covaxin' />
          <alias key='&quot;[federated.14czmos17m2oi21g7kw7k0v3bfx5].[sum:CoviShield (Doses Administered):qk]&quot;' value='CoviShield ' />
          <alias key='&quot;[federated.14czmos17m2oi21g7kw7k0v3bfx5].[sum:Sputnik V (Doses Administered):qk]&quot;' value='Sputnik V ' />
        </aliases>
      </column>
      <column caption='Aefi' datatype='real' name='[AEFI]' role='measure' type='quantitative' />
      <column datatype='real' name='[Covaxin (Doses Administered)]' role='measure' type='quantitative' />
      <column datatype='real' name='[CoviShield (Doses Administered)]' role='measure' type='quantitative' />
      <column caption='Sites' datatype='real' name='[Sites ]' role='measure' type='quantitative' />
      <column datatype='real' name='[Sputnik V (Doses Administered)]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='covid_vaccine_statewise.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_vaccine_statewise.csv_133EAAD113D2481BBCDEEC2511F95C7E]' role='measure' type='quantitative' />
      <column-instance column='[Covaxin (Doses Administered)]' derivation='Sum' name='[sum:Covaxin (Doses Administered):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CoviShield (Doses Administered)]' derivation='Sum' name='[sum:CoviShield (Doses Administered):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sputnik V (Doses Administered)]' derivation='Sum' name='[sum:Sputnik V (Doses Administered):qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='covid_vaccine_statewise.csv' id='covid_vaccine_statewise.csv_133EAAD113D2481BBCDEEC2511F95C7E'>
            <properties context=''>
              <relation connection='textscan.0ei3vgf0kkmacl16ht8vc12puasy' name='covid_vaccine_statewise.csv' table='[covid_vaccine_statewise#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='date' name='Updated On' ordinal='0' />
                  <column datatype='string' name='State' ordinal='1' />
                  <column datatype='real' name='Total Doses Administered' ordinal='2' />
                  <column datatype='real' name='Sessions' ordinal='3' />
                  <column datatype='real' name='Sites ' ordinal='4' />
                  <column datatype='real' name='First Dose Administered' ordinal='5' />
                  <column datatype='real' name='Second Dose Administered' ordinal='6' />
                  <column datatype='real' name='Male (Doses Administered)' ordinal='7' />
                  <column datatype='real' name='Female (Doses Administered)' ordinal='8' />
                  <column datatype='real' name='Transgender (Doses Administered)' ordinal='9' />
                  <column datatype='real' name='Covaxin (Doses Administered)' ordinal='10' />
                  <column datatype='real' name='CoviShield (Doses Administered)' ordinal='11' />
                  <column datatype='real' name='Sputnik V (Doses Administered)' ordinal='12' />
                  <column datatype='real' name='AEFI' ordinal='13' />
                  <column datatype='real' name='18-44 Years (Doses Administered)' ordinal='14' />
                  <column datatype='real' name='45-60 Years (Doses Administered)' ordinal='15' />
                  <column datatype='real' name='60+ Years (Doses Administered)' ordinal='16' />
                  <column datatype='real' name='18-44 Years(Individuals Vaccinated)' ordinal='17' />
                  <column datatype='real' name='45-60 Years(Individuals Vaccinated)' ordinal='18' />
                  <column datatype='real' name='60+ Years(Individuals Vaccinated)' ordinal='19' />
                  <column datatype='real' name='Male(Individuals Vaccinated)' ordinal='20' />
                  <column datatype='real' name='Female(Individuals Vaccinated)' ordinal='21' />
                  <column datatype='real' name='Transgender(Individuals Vaccinated)' ordinal='22' />
                  <column datatype='real' name='Total Individuals Vaccinated' ordinal='23' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='AgeGroupDetails' inline='true' name='federated.1wq8l7p0gnvoyo13sjuln0yhip16' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='AgeGroupDetails' name='textscan.0vn2ev00jfvux11f994cj1yeqb1s'>
            <connection class='textscan' directory='C:/Users/piyush/Downloads' filename='AgeGroupDetails.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0vn2ev00jfvux11f994cj1yeqb1s' name='AgeGroupDetails.csv' table='[AgeGroupDetails#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='Sno' ordinal='0' />
            <column datatype='string' name='AgeGroup' ordinal='1' />
            <column datatype='integer' name='TotalCases' ordinal='2' />
            <column datatype='real' name='Percentage' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[AgeGroupDetails.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sno</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sno]</local-name>
            <parent-name>[AgeGroupDetails.csv]</parent-name>
            <remote-alias>Sno</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[AgeGroupDetails.csv_FEC093CC545342499CE2ED60C802EFC9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AgeGroup</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AgeGroup]</local-name>
            <parent-name>[AgeGroupDetails.csv]</parent-name>
            <remote-alias>AgeGroup</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[AgeGroupDetails.csv_FEC093CC545342499CE2ED60C802EFC9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalCases]</local-name>
            <parent-name>[AgeGroupDetails.csv]</parent-name>
            <remote-alias>TotalCases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[AgeGroupDetails.csv_FEC093CC545342499CE2ED60C802EFC9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percentage]</local-name>
            <parent-name>[AgeGroupDetails.csv]</parent-name>
            <remote-alias>Percentage</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[AgeGroupDetails.csv_FEC093CC545342499CE2ED60C802EFC9]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Age Group' datatype='string' name='[AgeGroup]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
      <column caption='AgeGroupDetails.csv' datatype='table' name='[__tableau_internal_object_id__].[AgeGroupDetails.csv_FEC093CC545342499CE2ED60C802EFC9]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='AgeGroupDetails.csv' id='AgeGroupDetails.csv_FEC093CC545342499CE2ED60C802EFC9'>
            <properties context=''>
              <relation connection='textscan.0vn2ev00jfvux11f994cj1yeqb1s' name='AgeGroupDetails.csv' table='[AgeGroupDetails#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='Sno' ordinal='0' />
                  <column datatype='string' name='AgeGroup' ordinal='1' />
                  <column datatype='integer' name='TotalCases' ordinal='2' />
                  <column datatype='real' name='Percentage' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='IndividualDetails' inline='true' name='federated.1eabu8z1139epq15qw8ie0h9anca' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='IndividualDetails' name='textscan.17p85yu0j8e50r16nesr60sg5xi8'>
            <connection class='textscan' directory='C:/Users/piyush/Downloads/IndividualDetails.csv' filename='IndividualDetails.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.17p85yu0j8e50r16nesr60sg5xi8' name='IndividualDetails.csv' table='[IndividualDetails#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='government_id' ordinal='1' />
            <column datatype='date' name='diagnosed_date' ordinal='2' />
            <column datatype='integer' name='age' ordinal='3' />
            <column datatype='string' name='gender' ordinal='4' />
            <column datatype='string' name='detected_city' ordinal='5' />
            <column datatype='string' name='detected_district' ordinal='6' />
            <column datatype='string' name='detected_state' ordinal='7' />
            <column datatype='string' name='nationality' ordinal='8' />
            <column datatype='string' name='current_status' ordinal='9' />
            <column datatype='date' name='status_change_date' ordinal='10' />
            <column datatype='string' name='notes' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[IndividualDetails.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[IndividualDetails.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[IndividualDetails.csv_5317908C28C448B381F92910A8D23392]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>government_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[government_id]</local-name>
            <parent-name>[IndividualDetails.csv]</parent-name>
            <remote-alias>government_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[IndividualDetails.csv_5317908C28C448B381F92910A8D23392]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diagnosed_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[diagnosed_date]</local-name>
            <parent-name>[IndividualDetails.csv]</parent-name>
            <remote-alias>diagnosed_date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[IndividualDetails.csv_5317908C28C448B381F92910A8D23392]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age]</local-name>
            <parent-name>[IndividualDetails.csv]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[IndividualDetails.csv_5317908C28C448B381F92910A8D23392]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[IndividualDetails.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[IndividualDetails.csv_5317908C28C448B381F92910A8D23392]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>detected_city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[detected_city]</local-name>
            <parent-name>[IndividualDetails.csv]</parent-name>
            <remote-alias>detected_city</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[IndividualDetails.csv_5317908C28C448B381F92910A8D23392]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>detected_district</remote-name>
            <remote-type>129</remote-type>
            <local-name>[detected_district]</local-name>
            <parent-name>[IndividualDetails.csv]</parent-name>
            <remote-alias>detected_district</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[IndividualDetails.csv_5317908C28C448B381F92910A8D23392]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>detected_state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[detected_state]</local-name>
            <parent-name>[IndividualDetails.csv]</parent-name>
            <remote-alias>detected_state</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[IndividualDetails.csv_5317908C28C448B381F92910A8D23392]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nationality</remote-name>
            <remote-type>129</remote-type>
            <local-name>[nationality]</local-name>
            <parent-name>[IndividualDetails.csv]</parent-name>
            <remote-alias>nationality</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[IndividualDetails.csv_5317908C28C448B381F92910A8D23392]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>current_status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[current_status]</local-name>
            <parent-name>[IndividualDetails.csv]</parent-name>
            <remote-alias>current_status</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[IndividualDetails.csv_5317908C28C448B381F92910A8D23392]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>status_change_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[status_change_date]</local-name>
            <parent-name>[IndividualDetails.csv]</parent-name>
            <remote-alias>status_change_date</remote-alias>
            <ordinal>10</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[IndividualDetails.csv_5317908C28C448B381F92910A8D23392]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>notes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[notes]</local-name>
            <parent-name>[IndividualDetails.csv]</parent-name>
            <remote-alias>notes</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[IndividualDetails.csv_5317908C28C448B381F92910A8D23392]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='IndividualDetails.csv' datatype='table' name='[__tableau_internal_object_id__].[IndividualDetails.csv_5317908C28C448B381F92910A8D23392]' role='measure' type='quantitative' />
      <column caption='Age' datatype='integer' name='[age]' role='measure' type='quantitative' />
      <column caption='Current Status' datatype='string' name='[current_status]' role='dimension' type='nominal' />
      <column caption='Detected City' datatype='string' name='[detected_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Detected District' datatype='string' name='[detected_district]' role='dimension' type='nominal' />
      <column caption='Detected State' datatype='string' name='[detected_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Diagnosed Date' datatype='date' name='[diagnosed_date]' role='dimension' type='ordinal' />
      <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
      <column caption='Government Id' datatype='string' name='[government_id]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Nationality' datatype='string' name='[nationality]' role='dimension' type='nominal' />
      <column caption='Notes' datatype='string' name='[notes]' role='dimension' type='nominal' />
      <column caption='Status Change Date' datatype='date' name='[status_change_date]' role='dimension' type='ordinal' />
      <drill-paths>
        <drill-path name='detected_state, detected_city'>
          <field>[detected_state]</field>
          <field>[detected_city]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='IndividualDetails.csv' id='IndividualDetails.csv_5317908C28C448B381F92910A8D23392'>
            <properties context=''>
              <relation connection='textscan.17p85yu0j8e50r16nesr60sg5xi8' name='IndividualDetails.csv' table='[IndividualDetails#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='string' name='government_id' ordinal='1' />
                  <column datatype='date' name='diagnosed_date' ordinal='2' />
                  <column datatype='integer' name='age' ordinal='3' />
                  <column datatype='string' name='gender' ordinal='4' />
                  <column datatype='string' name='detected_city' ordinal='5' />
                  <column datatype='string' name='detected_district' ordinal='6' />
                  <column datatype='string' name='detected_state' ordinal='7' />
                  <column datatype='string' name='nationality' ordinal='8' />
                  <column datatype='string' name='current_status' ordinal='9' />
                  <column datatype='date' name='status_change_date' ordinal='10' />
                  <column datatype='string' name='notes' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='ICMRTestingLabs' inline='true' name='federated.0wfhte80x3v8920zm57g1186xbz7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ICMRTestingLabs' name='textscan.0zbyzug1suvhmq11afuro06kgux3'>
            <connection class='textscan' directory='C:/Users/piyush/Downloads' filename='ICMRTestingLabs.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0zbyzug1suvhmq11afuro06kgux3' name='ICMRTestingLabs.csv' table='[ICMRTestingLabs#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='lab' ordinal='0' />
            <column datatype='string' name='address' ordinal='1' />
            <column datatype='integer' name='pincode' ordinal='2' />
            <column datatype='string' name='city' ordinal='3' />
            <column datatype='string' name='state' ordinal='4' />
            <column datatype='string' name='type' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ICMRTestingLabs.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lab</remote-name>
            <remote-type>129</remote-type>
            <local-name>[lab]</local-name>
            <parent-name>[ICMRTestingLabs.csv]</parent-name>
            <remote-alias>lab</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ICMRTestingLabs.csv_00CFA8A40BDB4189A1D4436743B80EE0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[address]</local-name>
            <parent-name>[ICMRTestingLabs.csv]</parent-name>
            <remote-alias>address</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ICMRTestingLabs.csv_00CFA8A40BDB4189A1D4436743B80EE0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pincode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pincode]</local-name>
            <parent-name>[ICMRTestingLabs.csv]</parent-name>
            <remote-alias>pincode</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ICMRTestingLabs.csv_00CFA8A40BDB4189A1D4436743B80EE0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[ICMRTestingLabs.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ICMRTestingLabs.csv_00CFA8A40BDB4189A1D4436743B80EE0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[ICMRTestingLabs.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ICMRTestingLabs.csv_00CFA8A40BDB4189A1D4436743B80EE0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[ICMRTestingLabs.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[ICMRTestingLabs.csv_00CFA8A40BDB4189A1D4436743B80EE0]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Title ' datatype='string' name='[Calculation_1363464800329801734]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Covid-19 in India Dashboard Analysis&quot;' />
      </column>
      <column caption='ICMRTestingLabs.csv' datatype='table' name='[__tableau_internal_object_id__].[ICMRTestingLabs.csv_00CFA8A40BDB4189A1D4436743B80EE0]' role='measure' type='quantitative' />
      <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Lab' datatype='string' name='[lab]' role='dimension' type='nominal' />
      <column caption='Pincode' datatype='integer' name='[pincode]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <drill-paths>
        <drill-path name='state, city'>
          <field>[state]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='ICMRTestingLabs.csv' id='ICMRTestingLabs.csv_00CFA8A40BDB4189A1D4436743B80EE0'>
            <properties context=''>
              <relation connection='textscan.0zbyzug1suvhmq11afuro06kgux3' name='ICMRTestingLabs.csv' table='[ICMRTestingLabs#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='lab' ordinal='0' />
                  <column datatype='string' name='address' ordinal='1' />
                  <column datatype='integer' name='pincode' ordinal='2' />
                  <column datatype='string' name='city' ordinal='3' />
                  <column datatype='string' name='state' ordinal='4' />
                  <column datatype='string' name='type' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='StatewiseTestingDetails' inline='true' name='federated.0c03ll20spx6gh13huori0l8vdz9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='StatewiseTestingDetails' name='textscan.0cp3san1efqfs10zr88a81gm1o2q'>
            <connection class='textscan' directory='C:/Users/piyush/Downloads' filename='StatewiseTestingDetails.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0cp3san1efqfs10zr88a81gm1o2q' name='StatewiseTestingDetails.csv' table='[StatewiseTestingDetails#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='real' name='TotalSamples' ordinal='2' />
            <column datatype='integer' name='Negative' ordinal='3' />
            <column datatype='real' name='Positive' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[StatewiseTestingDetails.csv_25220B9019EF4C93BE35E5BC11E0AF06]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[StatewiseTestingDetails.csv_25220B9019EF4C93BE35E5BC11E0AF06]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalSamples</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TotalSamples]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>TotalSamples</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[StatewiseTestingDetails.csv_25220B9019EF4C93BE35E5BC11E0AF06]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Negative</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Negative]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>Negative</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[StatewiseTestingDetails.csv_25220B9019EF4C93BE35E5BC11E0AF06]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Positive]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>Positive</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[StatewiseTestingDetails.csv_25220B9019EF4C93BE35E5BC11E0AF06]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Negative]' role='measure' type='quantitative' />
      <column datatype='real' name='[Positive]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total Samples' datatype='real' name='[TotalSamples]' role='measure' type='quantitative' />
      <column caption='StatewiseTestingDetails.csv' datatype='table' name='[__tableau_internal_object_id__].[StatewiseTestingDetails.csv_25220B9019EF4C93BE35E5BC11E0AF06]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[StatewiseTestingDetails.csv_25220B9019EF4C93BE35E5BC11E0AF06]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:StatewiseTestingDetails.csv_25220B9019EF4C93BE35E5BC11E0AF06:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Negative]' derivation='Sum' name='[sum:Negative:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Positive]' derivation='Sum' name='[sum:Positive:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalSamples]' derivation='Sum' name='[sum:TotalSamples:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0c03ll20spx6gh13huori0l8vdz9].[sum:TotalSamples:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0c03ll20spx6gh13huori0l8vdz9].[sum:Negative:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0c03ll20spx6gh13huori0l8vdz9].[sum:Positive:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0c03ll20spx6gh13huori0l8vdz9].[__tableau_internal_object_id__].[cnt:StatewiseTestingDetails.csv_25220B9019EF4C93BE35E5BC11E0AF06:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0c03ll20spx6gh13huori0l8vdz9]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='StatewiseTestingDetails.csv' id='StatewiseTestingDetails.csv_25220B9019EF4C93BE35E5BC11E0AF06'>
            <properties context=''>
              <relation connection='textscan.0cp3san1efqfs10zr88a81gm1o2q' name='StatewiseTestingDetails.csv' table='[StatewiseTestingDetails#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='string' name='State' ordinal='1' />
                  <column datatype='real' name='TotalSamples' ordinal='2' />
                  <column datatype='integer' name='Negative' ordinal='3' />
                  <column datatype='real' name='Positive' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Death &amp; Cured'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff'>Covid Cases by State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india (1)' name='federated.0dlmfty0322y09169ai7m17olsfk' />
          </datasources>
          <datasource-dependencies datasource='federated.0dlmfty0322y09169ai7m17olsfk'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cured]' derivation='Sum' name='[sum:Cured:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dlmfty0322y09169ai7m17olsfk].[none:Date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-01-30#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-01-31#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-01#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-02#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-03#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-04#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-05#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-06#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-07#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-08#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-09#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-10#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-11#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-12#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-13#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-14#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-15#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-16#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-17#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-18#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-19#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-20#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-21#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-22#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-23#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-24#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-25#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-26#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-27#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-28#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-02-29#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-01#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-02#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-03#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-04#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-05#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-06#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-07#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-08#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-09#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-10#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-11#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-12#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-13#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-14#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-15#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-16#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-17#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-18#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-19#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-20#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-21#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-22#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-23#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-24#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-25#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-26#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-27#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-28#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-29#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-30#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-31#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-01#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-02#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-03#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-04#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-05#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-06#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-07#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-08#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-09#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-10#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-11#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-12#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-13#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-14#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-15#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-16#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-17#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-18#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-19#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-20#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-21#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-22#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-23#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-24#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-25#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-26#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-27#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-28#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-29#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-30#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-01#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-02#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-03#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-04#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-05#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-06#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-07#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-08#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-09#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-10#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-11#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-12#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-13#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-14#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-15#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-16#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-17#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-18#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-19#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-20#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-21#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-22#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-23#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-24#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-25#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-26#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-27#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-28#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-29#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-30#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-31#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-01#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-02#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-03#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-04#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-05#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-06#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-07#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-08#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-09#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-10#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-11#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-12#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-13#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-14#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-15#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-16#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-17#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-18#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-19#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-20#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-21#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-22#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-23#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-24#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-25#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-26#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-27#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-28#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-29#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-06-30#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-01#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-02#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-03#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-04#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-05#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-06#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-07#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-08#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-09#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-10#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-11#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-12#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-13#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-14#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-15#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-16#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-17#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-18#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-19#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-20#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-21#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-22#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-23#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-24#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-25#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-26#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-27#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-28#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-29#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-30#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-07-31#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-01#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-02#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-03#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-04#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-05#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-06#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-07#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-08#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-09#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-10#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-11#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-12#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-13#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-14#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-15#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-16#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-17#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-18#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-19#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-20#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-21#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-22#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-23#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-24#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-25#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-26#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-27#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-28#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-29#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-30#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-08-31#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-09-01#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-09-02#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-09-03#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-09-04#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-09-05#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-09-06#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-09-07#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-09-08#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-09-09#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-09-10#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-09-11#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-09-12#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-09-13#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-09-14#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-09-15#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-09-16#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-09-17#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-09-18#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-09-19#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-09-20#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-09-21#' />
              <groupfilter function='member' level='[none:Date:ok]' member='#2020-09-22#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dlmfty0322y09169ai7m17olsfk].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
          <calcs-on-densified-marks value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dlmfty0322y09169ai7m17olsfk].[none:Date:qk]' field-type='quantitative' max='#2020-10-30#' min='#2019-08-14#' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0dlmfty0322y09169ai7m17olsfk].[sum:Cured:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='auto-subtitle' class='0' field='[federated.0dlmfty0322y09169ai7m17olsfk].[sum:Cured:qk]' scope='rows' value='false' />
            <format attr='tick-color' field='[federated.0dlmfty0322y09169ai7m17olsfk].[none:Date:qk]' value='#00000000' />
            <format attr='render-fold-reversed' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#1b1b1b' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#1b1b1b' />
            <format attr='background-color' field='[federated.0dlmfty0322y09169ai7m17olsfk].[none:Date:qk]' value='#333333' />
            <format attr='background-color' data-class='subtotal' value='#000000' />
            <format attr='background-color' scope='rows' value='#000000' />
            <format attr='background-color' scope='cols' value='#000000' />
            <format attr='background-color' data-class='total' value='#000000' />
            <format attr='border-width' scope='cols' value='0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0dlmfty0322y09169ai7m17olsfk].[none:Date:qk]' value='0' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='background-color' value='#000000' />
            <format attr='band-color' scope='rows' value='#1b1b1b' />
            <format attr='band-color' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
            <format attr='band-level' scope='rows' value='0' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='1' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.0dlmfty0322y09169ai7m17olsfk].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0dlmfty0322y09169ai7m17olsfk].[sum:Cured:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0dlmfty0322y09169ai7m17olsfk].[sum:Cured:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <encoding attr='density-color' palette='blue_teal_10_0' type='interpolated' />
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dlmfty0322y09169ai7m17olsfk].[sum:Confirmed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0dlmfty0322y09169ai7m17olsfk].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1094474792480469' />
                <encoding attr='density-color' palette='blue_teal_10_0' type='interpolated' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#f31501' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dlmfty0322y09169ai7m17olsfk].[sum:Cured:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0dlmfty0322y09169ai7m17olsfk].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1754143238067627' />
                <encoding attr='density-color' palette='blue_teal_10_0' type='interpolated' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0dlmfty0322y09169ai7m17olsfk].[:Measure Names] * ([federated.0dlmfty0322y09169ai7m17olsfk].[sum:Confirmed:qk] + [federated.0dlmfty0322y09169ai7m17olsfk].[sum:Cured:qk]))</rows>
        <cols>[federated.0dlmfty0322y09169ai7m17olsfk].[none:Date:qk]</cols>
        <extend-time-series>
          <extended-column column='[federated.0dlmfty0322y09169ai7m17olsfk].[Date]' num-periods='6' period-type='month' />
        </extend-time-series>
      </table>
      <simple-id uuid='{7EA40652-300D-4026-8F1A-149C4F52EBF5}' />
    </worksheet>
    <worksheet name='Doses Administered by Vaccine'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Tableau Bold'>Dose Administered by Vaccine</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_vaccine_statewise' name='federated.14czmos17m2oi21g7kw7k0v3bfx5' />
          </datasources>
          <datasource-dependencies datasource='federated.14czmos17m2oi21g7kw7k0v3bfx5'>
            <column datatype='real' name='[Covaxin (Doses Administered)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CoviShield (Doses Administered)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sputnik V (Doses Administered)]' role='measure' type='quantitative' />
            <column-instance column='[Covaxin (Doses Administered)]' derivation='Sum' name='[sum:Covaxin (Doses Administered):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CoviShield (Doses Administered)]' derivation='Sum' name='[sum:CoviShield (Doses Administered):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sputnik V (Doses Administered)]' derivation='Sum' name='[sum:Sputnik V (Doses Administered):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14czmos17m2oi21g7kw7k0v3bfx5].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14czmos17m2oi21g7kw7k0v3bfx5].[sum:Covaxin (Doses Administered):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14czmos17m2oi21g7kw7k0v3bfx5].[sum:CoviShield (Doses Administered):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14czmos17m2oi21g7kw7k0v3bfx5].[sum:Sputnik V (Doses Administered):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.14czmos17m2oi21g7kw7k0v3bfx5].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.14czmos17m2oi21g7kw7k0v3bfx5].[sum:CoviShield (Doses Administered):qk]&quot;</bucket>
              <bucket>&quot;[federated.14czmos17m2oi21g7kw7k0v3bfx5].[sum:Covaxin (Doses Administered):qk]&quot;</bucket>
              <bucket>&quot;[federated.14czmos17m2oi21g7kw7k0v3bfx5].[sum:Sputnik V (Doses Administered):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.14czmos17m2oi21g7kw7k0v3bfx5].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.14czmos17m2oi21g7kw7k0v3bfx5].[Multiple Values]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' value='#ffffff' />
            <format attr='cell-w' value='54' />
            <format attr='cell-h' value='36' />
            <format attr='cell' value='18' />
            <format attr='cell-q' value='90' />
            <format attr='border-width' scope='cols' value='1' />
            <format attr='border-color' scope='cols' value='#f28e2b' />
            <format attr='border-style' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='rows' value='#000000' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-decoration' scope='rows' value='underline' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='color' scope='rows' value='#ffffff' />
            <format attr='text-orientation' scope='rows' value='0' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' scope='cols' value='0' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='10' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='1' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14czmos17m2oi21g7kw7k0v3bfx5].[:Measure Names]</rows>
        <cols>[federated.14czmos17m2oi21g7kw7k0v3bfx5].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{53070DF9-0DE2-45FF-9E07-39244483326D}' />
    </worksheet>
    <worksheet name='First &amp; Second Dose'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff'>Second &amp; First Dose</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_vaccine_statewise' name='federated.14czmos17m2oi21g7kw7k0v3bfx5' />
          </datasources>
          <datasource-dependencies datasource='federated.14czmos17m2oi21g7kw7k0v3bfx5'>
            <column datatype='real' name='[First Dose Administered]' role='measure' type='quantitative' />
            <column datatype='real' name='[Second Dose Administered]' role='measure' type='quantitative' />
            <column-instance column='[First Dose Administered]' derivation='Sum' name='[sum:First Dose Administered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Second Dose Administered]' derivation='Sum' name='[sum:Second Dose Administered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14czmos17m2oi21g7kw7k0v3bfx5].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14czmos17m2oi21g7kw7k0v3bfx5].[sum:First Dose Administered:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14czmos17m2oi21g7kw7k0v3bfx5].[sum:Second Dose Administered:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.14czmos17m2oi21g7kw7k0v3bfx5].[sum:First Dose Administered:qk]' included-values='in-range' />
          <slices>
            <column>[federated.14czmos17m2oi21g7kw7k0v3bfx5].[:Measure Names]</column>
            <column>[federated.14czmos17m2oi21g7kw7k0v3bfx5].[sum:First Dose Administered:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.14czmos17m2oi21g7kw7k0v3bfx5].[Multiple Values]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.14czmos17m2oi21g7kw7k0v3bfx5].[Multiple Values]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='subtotal' value='2' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-family' scope='cols' value='Tableau Medium' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-width' data-class='total' scope='cols' value='1' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <reference-line axis-column='[federated.14czmos17m2oi21g7kw7k0v3bfx5].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' value-column='[federated.14czmos17m2oi21g7kw7k0v3bfx5].[Multiple Values]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7251380681991577' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14czmos17m2oi21g7kw7k0v3bfx5].[Multiple Values]</rows>
        <cols>[federated.14czmos17m2oi21g7kw7k0v3bfx5].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{EA3194E1-8492-4E80-9B2F-987004F8D1D9}' />
    </worksheet>
    <worksheet name='ICMR Testing Labs in Each State'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Tableau Medium'>ICMR Testing Labs in Each State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ICMRTestingLabs' name='federated.0wfhte80x3v8920zm57g1186xbz7' />
          </datasources>
          <datasource-dependencies datasource='federated.0wfhte80x3v8920zm57g1186xbz7'>
            <column-instance column='[lab]' derivation='Count' name='[cnt:lab:qk]' pivot='key' type='quantitative' />
            <column caption='Lab' datatype='string' name='[lab]' role='dimension' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0wfhte80x3v8920zm57g1186xbz7].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Maharashtra&quot;</bucket>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
              <bucket>&quot;Telangana&quot;</bucket>
              <bucket>&quot;Delhi&quot;</bucket>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
              <bucket>&quot;Karnataka&quot;</bucket>
              <bucket>&quot;Gujarat&quot;</bucket>
              <bucket>&quot;West Bengal&quot;</bucket>
              <bucket>&quot;Kerala&quot;</bucket>
              <bucket>&quot;Haryana&quot;</bucket>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
              <bucket>&quot;Rajasthan&quot;</bucket>
              <bucket>&quot;Odisha&quot;</bucket>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
              <bucket>&quot;Bihar&quot;</bucket>
              <bucket>&quot;Assam&quot;</bucket>
              <bucket>&quot;Punjab&quot;</bucket>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
              <bucket>&quot;Uttarakhand&quot;</bucket>
              <bucket>&quot;Jharkhand&quot;</bucket>
              <bucket>&quot;Himachal Pradesh&quot;</bucket>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
              <bucket>&quot;Chandigarh&quot;</bucket>
              <bucket>&quot;Manipur&quot;</bucket>
              <bucket>&quot;Tripura&quot;</bucket>
              <bucket>&quot;Sikkim&quot;</bucket>
              <bucket>&quot;Puducherry&quot;</bucket>
              <bucket>&quot;Mizoram&quot;</bucket>
              <bucket>&quot;Meghalaya&quot;</bucket>
              <bucket>&quot;Ladakh&quot;</bucket>
              <bucket>&quot;Goa&quot;</bucket>
              <bucket>&quot;Dadra and Nagar Haveli and Daman and Diu&quot;</bucket>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
              <bucket>&quot;Andaman and Nicobar Islands&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0wfhte80x3v8920zm57g1186xbz7].[cnt:lab:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='cell-w' value='60' />
            <format attr='cell-h' value='40' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-width' scope='rows' value='1' />
            <format attr='border-style' scope='rows' value='solid' />
            <format attr='border-style' scope='cols' value='solid' />
            <format attr='border-width' scope='cols' value='2' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='rows' value='#000000' />
            <format attr='background-color' scope='cols' value='#000000' />
            <format attr='background-color' field='[federated.0wfhte80x3v8920zm57g1186xbz7].[none:state:nk]' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffbe7d' />
            <format attr='border-color' data-class='subtotal' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='top' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='text-decoration' scope='cols' value='none' />
            <format attr='font-style' scope='cols' value='normal' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' value='#000000' />
            <format attr='border-width' scope='rows' value='1' />
            <format attr='border-style' scope='rows' value='solid' />
            <format attr='border-color' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#ffffff' />
            <format attr='stroke-size' value='0' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4612706899642944' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wfhte80x3v8920zm57g1186xbz7].[none:state:nk]</rows>
        <cols>[federated.0wfhte80x3v8920zm57g1186xbz7].[cnt:lab:qk]</cols>
      </table>
      <simple-id uuid='{528A7AE0-ECD6-488E-B02C-B31130225FFB}' />
    </worksheet>
    <worksheet name='Map: Total Death by State'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Tableau Medium'>Map: Total Death by State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india (1)' name='federated.0dlmfty0322y09169ai7m17olsfk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dlmfty0322y09169ai7m17olsfk'>
            <column caption='([Deaths])' datatype='integer' name='[Calculation_1363464800348725255]' role='measure' type='quantitative' user:unnamed='Map: Total Death by State'>
              <calculation class='tableau' formula='([Deaths])' />
            </column>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1363464800348725255]' derivation='Sum' name='[sum:Calculation_1363464800348725255:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0dlmfty0322y09169ai7m17olsfk].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0dlmfty0322y09169ai7m17olsfk].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.0dlmfty0322y09169ai7m17olsfk].[Latitude (generated)]</column>
            <column>[federated.0dlmfty0322y09169ai7m17olsfk].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' value='10' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0dlmfty0322y09169ai7m17olsfk].[sum:Calculation_1363464800348725255:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='subtotal' value='solid' />
            <format attr='border-width' data-class='subtotal' value='3' />
            <format attr='border-color' data-class='total' value='#333333' />
            <format attr='border-width' data-class='total' value='2' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffff7f' />
            <format attr='band-size' scope='rows' value='2' />
            <format attr='band-size' scope='cols' value='2' />
            <format attr='omit-on-special' field='[federated.0dlmfty0322y09169ai7m17olsfk].[none:State/UnionTerritory:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0dlmfty0322y09169ai7m17olsfk].[none:State/UnionTerritory:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0dlmfty0322y09169ai7m17olsfk].[none:State/UnionTerritory:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Tableau Medium' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0dlmfty0322y09169ai7m17olsfk].[sum:Calculation_1363464800348725255:qk]' value='Deaths'>
              <formatted-text>
                <run bold='true' fontsize='9'>Deaths</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='color' value='#f9a655' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0dlmfty0322y09169ai7m17olsfk].[sum:Calculation_1363464800348725255:qk]' />
              <text column='[federated.0dlmfty0322y09169ai7m17olsfk].[none:State/UnionTerritory:nk]' />
              <lod column='[federated.0dlmfty0322y09169ai7m17olsfk].[none:State/UnionTerritory:nk]' />
              <geometry column='[federated.0dlmfty0322y09169ai7m17olsfk].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dlmfty0322y09169ai7m17olsfk].[Latitude (generated)]</rows>
        <cols>[federated.0dlmfty0322y09169ai7m17olsfk].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{7E170326-4FDD-4F0E-B62A-9DE665142D86}' />
    </worksheet>
    <worksheet name='State wise Testing Details'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff'>State wise Testing Details</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='StatewiseTestingDetails' name='federated.0c03ll20spx6gh13huori0l8vdz9' />
          </datasources>
          <datasource-dependencies datasource='federated.0c03ll20spx6gh13huori0l8vdz9'>
            <column datatype='integer' name='[Negative]' role='measure' type='quantitative' />
            <column datatype='real' name='[Positive]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Total Samples' datatype='real' name='[TotalSamples]' role='measure' type='quantitative' />
            <column caption='StatewiseTestingDetails.csv' datatype='table' name='[__tableau_internal_object_id__].[StatewiseTestingDetails.csv_25220B9019EF4C93BE35E5BC11E0AF06]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[StatewiseTestingDetails.csv_25220B9019EF4C93BE35E5BC11E0AF06]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:StatewiseTestingDetails.csv_25220B9019EF4C93BE35E5BC11E0AF06:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative]' derivation='Sum' name='[sum:Negative:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Positive]' derivation='Sum' name='[sum:Positive:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalSamples]' derivation='Sum' name='[sum:TotalSamples:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0c03ll20spx6gh13huori0l8vdz9].[none:State:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
              <bucket>&quot;Maharashtra&quot;</bucket>
              <bucket>&quot;Bihar&quot;</bucket>
              <bucket>&quot;Karnataka&quot;</bucket>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
              <bucket>&quot;Gujarat&quot;</bucket>
              <bucket>&quot;Kerala&quot;</bucket>
              <bucket>&quot;Delhi&quot;</bucket>
              <bucket>&quot;Jharkhand&quot;</bucket>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
              <bucket>&quot;Telangana&quot;</bucket>
              <bucket>&quot;Rajasthan&quot;</bucket>
              <bucket>&quot;West Bengal&quot;</bucket>
              <bucket>&quot;Odisha&quot;</bucket>
              <bucket>&quot;Assam&quot;</bucket>
              <bucket>&quot;Haryana&quot;</bucket>
              <bucket>&quot;Punjab&quot;</bucket>
              <bucket>&quot;Uttarakhand&quot;</bucket>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
              <bucket>&quot;Himachal Pradesh&quot;</bucket>
              <bucket>&quot;Tripura&quot;</bucket>
              <bucket>&quot;Puducherry&quot;</bucket>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
              <bucket>&quot;Meghalaya&quot;</bucket>
              <bucket>&quot;Goa&quot;</bucket>
              <bucket>&quot;Chandigarh&quot;</bucket>
              <bucket>&quot;Manipur&quot;</bucket>
              <bucket>&quot;Andaman and Nicobar Islands&quot;</bucket>
              <bucket>&quot;Mizoram&quot;</bucket>
              <bucket>&quot;Ladakh&quot;</bucket>
              <bucket>&quot;Nagaland&quot;</bucket>
              <bucket>&quot;Sikkim&quot;</bucket>
              <bucket>&quot;Lakshadweep&quot;</bucket>
              <bucket>&quot;Dadra and Nagar Haveli and Daman and Diu&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0c03ll20spx6gh13huori0l8vdz9].[Multiple Values]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.0c03ll20spx6gh13huori0l8vdz9].[Multiple Values]' field-type='quantitative' max='11672121668.337252' min='783470940.87563574' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='60' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' scope='rows' value='solid' />
            <format attr='border-color' data-class='subtotal' value='#ffffff' />
            <format attr='border-style' data-class='subtotal' value='solid' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' scope='rows' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
            <format attr='text-decoration' value='none' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0c03ll20spx6gh13huori0l8vdz9].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0c03ll20spx6gh13huori0l8vdz9].[none:State:nk]</rows>
        <cols>[federated.0c03ll20spx6gh13huori0l8vdz9].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{7027B4EA-1ED8-4A4A-B358-8E42AD621159}' />
    </worksheet>
    <worksheet name='Title'>
      <table>
        <view>
          <datasources>
            <datasource caption='ICMRTestingLabs' name='federated.0wfhte80x3v8920zm57g1186xbz7' />
          </datasources>
          <datasource-dependencies datasource='federated.0wfhte80x3v8920zm57g1186xbz7'>
            <column caption='Title ' datatype='string' name='[Calculation_1363464800329801734]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Covid-19 in India Dashboard Analysis&quot;' />
            </column>
            <column-instance column='[Calculation_1363464800329801734]' derivation='None' name='[none:Calculation_1363464800329801734:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='103' />
            <format attr='width' value='1708' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='text-decoration' value='underline' />
            <format attr='font-size' value='16' />
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0wfhte80x3v8920zm57g1186xbz7].[none:Calculation_1363464800329801734:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.91154694557189941' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{77C9E65B-FC1E-413B-9871-71D9F94C62F0}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#000000' />
        </style-rule>
      </style>
      <size maxheight='1100' maxwidth='1800' minheight='1100' minwidth='1800' sizing-mode='fixed' />
      <datasources>
        <datasource caption='covid_vaccine_statewise' name='federated.14czmos17m2oi21g7kw7k0v3bfx5' />
      </datasources>
      <datasource-dependencies datasource='federated.14czmos17m2oi21g7kw7k0v3bfx5'>
        <column datatype='real' name='[First Dose Administered]' role='measure' type='quantitative' />
        <column-instance column='[First Dose Administered]' derivation='Sum' name='[sum:First Dose Administered:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='81909' id='7' param='horz' type-v2='layout-flow' w='99112' x='444' y='17364'>
            <zone h='81909' id='5' type-v2='layout-basic' w='99112' x='444' y='17364'>
              <zone h='40955' id='3' name='Map: Total Death by State' w='28500' x='444' y='17364'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='40955' id='9' name='Death &amp; Cured' w='36667' x='62889' y='17364'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='40954' id='10' name='First &amp; Second Dose' w='28500' x='444' y='58319'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='40954' id='12' name='Doses Administered by Vaccine' w='36667' x='62889' y='58319'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='40955' id='13' name='ICMR Testing Labs in Each State' w='33945' x='28944' y='17364'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='40954' id='14' name='State wise Testing Details' w='33945' x='28944' y='58319'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='16637' id='16' name='Title' w='99112' x='444' y='727'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone fixed-size='160' h='6818' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9556' x='12556' y='67727'>
          <zone fixed-size='66' h='6727' id='11' is-fixed='true' name='First &amp; Second Dose' param='[federated.14czmos17m2oi21g7kw7k0v3bfx5].[sum:First Dose Administered:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9556' x='12556' y='67727'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='4545' id='8' name='Map: Total Death by State' pane-specification-id='0' param='[federated.0dlmfty0322y09169ai7m17olsfk].[sum:Calculation_1363464800348725255:qk]' type-v2='color' w='7056' x='17167' y='52545' />
        <zone h='12727' id='15' name='State wise Testing Details' pane-specification-id='0' param='[federated.0c03ll20spx6gh13huori0l8vdz9].[:Measure Names]' type-v2='color' w='7111' x='50667' y='77818' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2150' minheight='2150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98546' id='21' param='vert' type-v2='layout-flow' w='99112' x='444' y='727'>
                <zone fixed-size='175' h='16637' id='16' is-fixed='true' name='Title' w='99112' x='444' y='727'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40955' id='3' is-fixed='true' name='Map: Total Death by State' w='28500' x='444' y='17364'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4545' id='8' name='Map: Total Death by State' pane-specification-id='0' param='[federated.0dlmfty0322y09169ai7m17olsfk].[sum:Calculation_1363464800348725255:qk]' type-v2='color' w='7056' x='17167' y='52545'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40955' id='13' is-fixed='true' name='ICMR Testing Labs in Each State' w='33945' x='28944' y='17364'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40955' id='9' is-fixed='true' name='Death &amp; Cured' w='36667' x='62889' y='17364'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='66' h='6727' id='11' name='First &amp; Second Dose' param='[federated.14czmos17m2oi21g7kw7k0v3bfx5].[sum:First Dose Administered:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9556' x='12556' y='67727'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40954' id='10' is-fixed='true' name='First &amp; Second Dose' w='28500' x='444' y='58319'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40954' id='14' is-fixed='true' name='State wise Testing Details' w='33945' x='28944' y='58319'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12727' id='15' name='State wise Testing Details' pane-specification-id='0' param='[federated.0c03ll20spx6gh13huori0l8vdz9].[:Measure Names]' type-v2='color' w='7111' x='50667' y='77818'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40954' id='12' is-fixed='true' name='Doses Administered by Vaccine' w='36667' x='62889' y='58319'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{19850605-B8ED-410E-BC8C-A991F3B585BC}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='198'>
    <window class='worksheet' name='Map: Total Death by State'>
      <cards>
        <edge name='left'>
          <strip size='145'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dlmfty0322y09169ai7m17olsfk].[sum:Calculation_1363464800348725255:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dlmfty0322y09169ai7m17olsfk].[none:State/UnionTerritory:nk]</field>
            <field>[federated.0dlmfty0322y09169ai7m17olsfk].[sum:Calculation_1363464800348725255:qk]</field>
          </color-one-way>
        </highlight>
        <map-scale-visibility value='0' />
        <default-map-unit-selection mapunit='1' />
      </viewpoint>
      <simple-id uuid='{966826A6-FEFC-4129-BE1B-1C66FC6938F1}' />
    </window>
    <window class='worksheet' name='Death &amp; Cured'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0dlmfty0322y09169ai7m17olsfk].[:Measure Names]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;[federated.0dlmfty0322y09169ai7m17olsfk].[sum:Cured:qk]&quot;</bucket>
                </multibucket>
                <axis>[federated.0dlmfty0322y09169ai7m17olsfk].[sum:Cured:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0dlmfty0322y09169ai7m17olsfk].[:Measure Names]</field>
            <field>[federated.0dlmfty0322y09169ai7m17olsfk].[sum:Cured:qk]</field>
            <field>[federated.0dlmfty0322y09169ai7m17olsfk].[tyr:Date:ok]</field>
            <field>[federated.0dlmfty0322y09169ai7m17olsfk].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C89546DB-FBF6-4030-979C-CA5BA6531A4C}' />
    </window>
    <window class='worksheet' name='First &amp; Second Dose'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.14czmos17m2oi21g7kw7k0v3bfx5].[sum:First Dose Administered:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.14czmos17m2oi21g7kw7k0v3bfx5].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B240FA33-1831-4C56-98C2-351DA85CE4AC}' />
    </window>
    <window class='worksheet' name='Doses Administered by Vaccine'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.14czmos17m2oi21g7kw7k0v3bfx5].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F51C8514-D3ED-4CAE-80EE-354749B9DF70}' />
    </window>
    <window class='worksheet' name='ICMR Testing Labs in Each State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wfhte80x3v8920zm57g1186xbz7].[none:lab:nk]</field>
            <field>[federated.0wfhte80x3v8920zm57g1186xbz7].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{56CB6F65-D2E5-49CE-9EDD-8E1EDF711ABF}' />
    </window>
    <window class='worksheet' name='Title'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wfhte80x3v8920zm57g1186xbz7].[none:Calculation_1363464800329801734:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{048AB6B6-8DD7-4C91-9510-7F4899F23B9D}' />
    </window>
    <window class='worksheet' name='State wise Testing Details'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='136'>
            <card pane-specification-id='0' param='[federated.0c03ll20spx6gh13huori0l8vdz9].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c03ll20spx6gh13huori0l8vdz9].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{32298B87-E22B-454F-938F-E299E17E07E7}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Death &amp; Cured'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Doses Administered by Vaccine'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='First &amp; Second Dose'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='ICMR Testing Labs in Each State' />
        <viewpoint name='Map: Total Death by State'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dlmfty0322y09169ai7m17olsfk].[sum:Calculation_1363464800348725255:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='State wise Testing Details'>
          <highlight field='[federated.0c03ll20spx6gh13huori0l8vdz9].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Title' />
      </viewpoints>
      <active id='15' />
      <simple-id uuid='{59D3E4DB-9E64-4DC0-8510-6605828E723F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Death &amp; Cured' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Doses Administered by Vaccine' width='192'>
      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
      Xc7k/wGMfbi5igXGLgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='First &amp; Second Dose' width='192'>
      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
      3pNCfWMjb78+g6PZZTYsWQjrae0BmqpYu3oVuzPOERoUQPf4Tqz6YBlLVn2GR0AIB7/9goyc
      S4T4e9iwXCGsqzUAlmY09m4EGX1QUPj800/p0DWZ+XNmogcCAkPxdjKgaPWyHFrcMlqGQJ4h
      nYmPgSaTmXZGX+wcO+KAhfq6OhT0GBwcaDI44+flxqY9+2U5tLgltASgMjeLPaezcNQ2k3ni
      NC5eAYQH+bL8ZCZaF1+KQ9vRWPc5J05m2bJeIayqJQCKxUTWiWMtD1SWFnCotODHOw0FHPjp
      thC3EJkGFaomARCqJgEQqiYBEKomARCqJgEQqiYBEKomARCq1roaVOfA6Psepp2bls/T1mN2
      DeGukX355ov1mLw6MHpQL+qqiln3SRpV9c02LFkI62ntAfSONFRcpMjkzWN3j2Bm6sucyMzm
      pZeeo0vvoTTmZ6ALSWJ0v842LFcI62oNQGMFjsauPH7/UL7fex5d5Tl2fLuVMpMTTnoY/cBj
      jEqK4NDJXFkNKm4ZLUMgZ68ATv+wiedPn+LXd/ZC4xlGTJdueBuaqTfBikWzKXRPYXBKDzk5
      rrhltATAZDLTb8TduOkbeHvxUjQ++3j4nhEsmjefOq9OTBz9AO2rilm6ZKct6xXCquTkuELV
      ZBpUqJoEQKiaBEComgRAqJoEQKiaBEComgRAqJoEQKiaBECoWutyaFx4Ze5Cwn1c+fT9uXgm
      jmNAl0BOHtzOriJXpo1Lpt5kYf6sFzl4tsR2FQthRa0B0JpZNjcVt7De3JcYi0t0JGnrPiA9
      fTfd7/stR9O30ODXHR8PF0ACIG4Nl50ct574Affz5J3d+PPS9fxl1QrcAiJ5+61Z6AF7gyM6
      i4Kjk5Mshxa3jJYeQOsVyUuPj+KLzzeRktyNoIQ+eBh0VJYVY8EJY2AI1Y6+5Djak/HdIVkO
      LW4JrUOgmjwmPvIEGqCmspRt+xdi9PUg92I2GkcPzvl7Y2qsI/tiru2qFcLKWgJgaaon6/Tp
      Kx7MqvrHlWCayjhdJVeFEbcemQYVqiYBEKomARCqJgEQqiYBEKomARCqJgEQqiYBEKp2RQA8
      fI10ie6IQadFb3AhOrozTvY6XLz8iIuLo1OHcHQaW5UqhPW1LoXQ+PLS76dTc0nBfHE3+ujb
      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
      PrxpXURhVwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='ICMR Testing Labs in Each State' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map: Total Death by State' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='State wise Testing Details' width='192'>
      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
    </thumbnail>
    <thumbnail height='107' name='Title' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABrCAYAAAAhB40qAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAACjklEQVR4nO3aoU4jURxG8W9aECBGNAHVEBQWUQd9hxoUro/Ck9RU1vASrcYBQTRIEkY0
      oYiGXgQbdlOSdbtNes4v+ZvWXHHPdKZ3qlJKiQTV2vYCpG0yAKEZgND2Nj+oqmob65C2wl8A
      oRmA0AxAaD+eATYtFov/sQ5pK6rNgzAfgkXiLZDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAM
      QGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCa
      AQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAWO122wDE1Ov1cn9/n5QN
      SRxnp+f6+rq8vb197XcDcEjT7/dL0zS/97sBOJSp67rMZrPvvf709GQADmeGw2H5+PgopZTS
      NE3p9/vFh2Ah7O/vZzAYpNX62vKj0SjT6dR/gcRwfHyc8/PzJMlischkMsl6vTYAMZycnKTT
      6SRJ5vN5Hh8fk3gQJohut5u6rpMkDw8PeX19TWIAglgul1mtVkmSTqeTg4ODJAYgiKZp8v7+
      niQ5OjrK4eFhEgMQxPPzc5qmSZKcnp7m7OwsiQEI4uXlJXd3d0mSuq5zdXWVVqtlAGJYrVa5
      vb3Ner1OkgyHw1xcXMSTYAczvgrh4MeX4Rz8/Pk6dPVr03+rqirSrru8vMx4PI4BCKvdbhuA
      2Pa2vQDpX9q4vv9gANppNzc3f/3eWyCheRIsNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCa
      AQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBC
      MwChGYDQDEBon1LbMiRmKiL5AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
